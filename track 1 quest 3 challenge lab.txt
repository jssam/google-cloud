1. gcloud auth list
2. gcloud config list project
/////task 1
3.gcloud compute networks create griffin-dev-vpc --subnet-mode custom

4.gcloud compute networks subnets create griffin-dev-wp --network=griffin-dev-vpc --region us-east1 --range=192.168.16.0/20

5.gcloud compute networks subnets create griffin-dev-mgmt --network=griffin-dev-vpc --region us-east1 --range=192.168.32.0/20

////task 2
6.  gsutil cp -r gs://cloud-training/gsp321/dm .
7. cd dm

sed -i s/SET_REGION/us-east1/g prod-network.yaml

gcloud deployment-manager deployments create prod-network \
    --config=prod-network.yaml

cd ..

8. gcloud compute instances create bastion --network-interface=network=griffin-dev-vpc,subnet=griffin-dev-mgmt  --network-interface=network=griffin-prod-vpc,subnet=griffin-prod-mgmt --tags=ssh --zone=us-east1-b

9. gcloud compute firewall-rules create fw-ssh-dev --source-ranges=0.0.0.0/0 --target-tags ssh --allow=tcp:22 --network=griffin-dev-vpc

10. gcloud compute firewall-rules create fw-ssh-prod --source-ranges=0.0.0.0/0 --target-tags ssh --allow=tcp:22 --network=griffin-prod-vpc

11. gcloud sql instances create griffin-dev-db --root-password password --region=us-east1

12. gcloud sql connect griffin-dev-db
13.CREATE DATABASE wordpress;
GRANT ALL PRIVILEGES ON wordpress.* TO "wp_user"@"%" IDENTIFIED BY "stormwind_rules";
FLUSH PRIVILEGES;

14.  gcloud container clusters create griffin-dev \
  --network griffin-dev-vpc \
  --subnetwork griffin-dev-wp \
  --machine-type n1-standard-4 \
  --num-nodes 2  \
  --zone us-east1-b

15.  gcloud container clusters get-credentials griffin-dev --zone us-east1-b 

16.  cd ~/

gsutil cp -r gs://cloud-training/gsp321/wp-k8s .

17. Click Open Editor and Select Open New Window. Go to wp-k8s folder and open wp-env.yaml. Change the username and password values to given values in lab. Save the changes.

18. cd wp-k8s 

kubectl apply -f wp-env.yaml

19. gcloud iam service-accounts keys create key.json \
    --iam-account=cloud-sql-proxy@$GOOGLE_CLOUD_PROJECT.iam.gserviceaccount.com
kubectl create secret generic cloudsql-instance-credentials \
    --from-file key.json

20. Now you have provisioned the MySQL database, and set up the secrets and volume, you can create the deployment using wp-deployment.yaml. Before you create the deployment you need to edit wp-deployment.yaml and replace YOUR_SQL_INSTANCE with griffin-dev-db's Instance connection name. Get the Instance connection name from your Cloud SQL instance.

21. kubectl create -f wp-deployment.yaml

kubectl create -f wp-service.yaml

22. go to kubernetes engine and go to services and ingress
23. copy the url and go to monitoring uptime checks
24. create up time check
25 host name me vo copy vala dal de path me / slash

26. now add new user copy user 2 name
go to im admin 
add member 
paste user name 
select the role